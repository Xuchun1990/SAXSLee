function hFigSAXSLee = SAXSLee(varargin)
% SAXS Program at APS 12-ID-B
% For data reading, plotting, background subtraction, merging, absolute
% intensity calibration and so on.
%
% Part of codes are taken from SPECR by Zhang Jiang and modified.
% Developed in 2009 and last updated on 8/28/2019.
% 
% Byeongdu Lee

hFigSAXSLee = findobj('Tag','SAXSLee_Fig');
if isempty(hFigSAXSLee)
    hFigSAXSLee = initFigure;
    assignin('base', 'SAXSLee_Handle', hFigSAXSLee);
else
    figure(hFigSAXSLee);
%    hFigSAXSLee;
    return;
end

% --- turn off waring;
warning off MATLAB:Axes:NegativeDataInLogAxis;


%================================================================
% --- initialize figure layout
%================================================================
function hFigSAXSLee = initFigure
% --------------------------------
% --- main figure handle
% --------------------------------
posScreen   = get(0,'screenSize');
hFigWidth   = 680;
hFigHeight  = 531;
hFigPos     = [...
    posScreen(3)/2-hFigWidth/2,...
    posScreen(4)/2-hFigHeight/2,...
    hFigWidth,hFigHeight];
hFigSAXSLee = figure(...
    'BackingStore','on',...
    'Units','pixels',...
    'DockControls','off',...
    'Resize','on',...
    'ResizeFcn',@SAXSLee_ResizeFcn,...    'SizeChangedFcn',@SAXSLee_ResizeFcn,...
    'PaperOrient','portrait',...
    'PaperPositionMode','auto',...
    'IntegerHandle','off',...
    'NumberTitle','off',...
    'MenuBar','none',...
    'Toolbar','none',...
    'Name','SAXSLee',...
    'Position',hFigPos,...
    'HandleVisibility','callback',...
    'Tag','SAXSLee_Fig',...
    'CreateFcn',@SAXSLee_CreateFcn,...
    'CloseRequestFcn',@SAXSLee_CloseRequestFcn,...
    'UserData',[]);
%SAXSLee_datalabel on
% --------------------------------
% --- axes handle
% --------------------------------
hAxes = axes(...
    'Parent',hFigSAXSLee,...
    'Box','on',...
    'XGrid','on',...
    'YGrid','on',...
    'XLimMode', 'auto',...
    'YLimMode', 'auto',...
    'Tag','SAXSLee_Axes');

% --------------------------------
% --- file menu handles
% --------------------------------
hMenuFile = uimenu(hFigSAXSLee,...
    'Label','&File',...
    'Position',1,...
    'HandleVisibility','callback',...
    'Tag','SAXSLee_MenuFile');
if isunix 
    uimenu(hMenuFile,...
        'Label','&Open Current Log File...',...
        'HandleVisibility','callback',...
        'Tag','SAXSLee_MenuFileOpenCurrent',...
        'Accelerator','O',...
        'callback',{@SAXSLee_openspec, 0});
end
    uimenu(hMenuFile,...
    'Label','&Open Log File...',...
    'HandleVisibility','callback',...
    'Tag','SAXSLee_MenuFileOpen',...
    'Accelerator','O',...
    'callback',@SAXSLee_openspec);

uimenu(hMenuFile,...
    'Label','&Load from Directory...',...
    'HandleVisibility','callback',...
    'Tag','SAXSLee_MenuFileLoad',...
    'Accelerator','L',...
    'callback',@SAXSLee_reflist);
uimenu(hMenuFile,...
    'Label','&Load from Processed...',...
    'HandleVisibility','callback',...
    'Tag','SAXSLee_MenuFileLoad',...
    'Accelerator','B',...
    'callback',@SAXSLee_reflist2_load);
% hMenuFileShowScan = uimenu(hMenuFile,...
%     'Label','&Load scans from directories',...
%     'Callback','SAXSLee_loadDir',...
%     'HandleVisibility','callback',...
%     'Tag','SAXSLee_MenuFileLoadDir');
uimenu(hMenuFile,...
    'Label','&Close',...
    'HandleVisibility','callback',...
    'Tag','SAXSLee_MenuFileClose',...
    'Accelerator','W',...
    'callback',@SAXSLee_CloseRequestFcn);
uimenu(hMenuFile,...
    'Label','&Save as fig',...
    'Separator','on',...
    'HandleVisibility','callback',...
    'Tag','SAXSLee_MenuFileSave',...
    'Accelerator','S',...
    'callback','SAXSLee_savefig');
uimenu(hMenuFile,...
    'Label','&Load *.fig',...
    'HandleVisibility','callback',...
    'Tag','SAXSLee_MenuFileLoad',...
    'Accelerator','L',...
    'callback','SAXSLee_loadfig');
uimenu(hMenuFile,...
    'Label','&Clear Current Selection',...
    'Separator','on',...
    'HandleVisibility','callback',...
    'Tag','SAXSLee_MenuFileClear',...
    'callback','SAXSLee_fileclear');
uimenu(hMenuFile,...
    'Label','Pa&ge Setup...',...
    'Separator','on',...
    'HandleVisibility','callback',...
    'Tag','SAXSLee_MenuFilePageSetup',...
    'callback','pagesetupdlg');
uimenu(hMenuFile,...
    'Label','Print Pre&view...',...
    'HandleVisibility','callback',...
    'Tag','SAXSLee_MenuFilePrintPreview',...
    'callback',@SAXSLee_PrintPreviewFcn);
uimenu(hMenuFile,...
    'Label','&Print...',...
    'HandleVisibility','callback',...
    'Tag','SAXSLee_MenuFilePrint',...
    'Accelerator','P',...
    'callback',@SAXSLee_PrintFcn);
if exist('print2figure', 'file') == 2
    uimenu(hMenuFile,...
        'Label','Print to Figure...',...
        'Accelerator','G',...
        'HandleVisibility','callback',...
        'Tag','SAXSLee_MenuFilePrintToFigure',...
        'callback','print2figure');
end
if exist('print2pdf', 'file') == 2
    uimenu(hMenuFile,...
        'Label','Print to PDF...',...
        'Accelerator','D',...
        'HandleVisibility','callback',...
        'Tag','SAXSLee_MenuFilePrintToPDF',...
        'callback',@print2pdf);
end
% --------------------------------
% --- tools menu handles
% --------------------------------
hMenuTools = uimenu(hFigSAXSLee,...
    'Label','&Tools',...
    'Position',2,...
    'HandleVisibility','callback',...
    'Tag','SAXSLee_MenuTools');
uimenu(hMenuTools,...
    'Label','&Merge Scans',...
    'HandleVisibility','callback',...
    'Accelerator','M',...
    'Callback','SAXSLee_scanmerge');
uimenu(hMenuTools,...
    'Label','Background Subtraction & Absolute Intensity Conversion',...
    'Callback',@SAXSLee_BackSub,... %showscan
    'HandleVisibility','callback',...
    'Tag','SAXSLee_MenuToolsBackSub');
uimenu(hMenuTools,...
    'Label','Compute Absolute Scale Factor for emptycell subtracted water or L17',...
    'HandleVisibility','callback',...
    'Callback', @ToolsAbsoluteCal_callback);
uimenu(hMenuTools,...
    'Label','Solvent Scattering Subtraction',...
    'Callback',@bioSAXSprocess2,... %showscan
    'HandleVisibility','callback',...
    'Tag','SAXSLee_MenuToolsSolvSub');
uimenu(hMenuTools,...
    'Label','Sho&w Information for Current Scan',...
    'Callback',@ToolsShowScan_callback,... %showscan
    'HandleVisibility','callback',...
    'Tag','SAXSLee_MenuToolsShowScan');
uimenu(hMenuTools,...
    'Label','Background Tools',...
    'HandleVisibility','callback',...
    'Accelerator','B',...
    'Callback',@ToolsBackground_callback);
uimenu(hMenuTools,...
    'Label','Plot Control',...
    'HandleVisibility','callback',...
    'Callback', @PlotControlTool_callback);
% hMenuToolsAbsoluteCal = uimenu(hMenuTools,...
%     'Label','&Absolute Intensity Calibration',...
%     'HandleVisibility','callback',...
%     'Tag','SAXSLee_MenuToolsAbsoluteCal');
% uimenu(hMenuToolsAbsoluteCal,...
%     'Label','Compute Absolute Int Scale Factor ...',...
%     'HandleVisibility','callback',...
%     'Callback', @ToolsAbsoluteCal_callback);
% uimenu(hMenuToolsAbsoluteCal,...
%     'Label','Convert Data into Abs Unit ...',...
%     'HandleVisibility','callback',...
%     'Callback', @SAXSLee_reflist);
uimenu(hMenuTools,...
    'Label','&Normalize...',...
    'HandleVisibility','callback',...
    'Callback','SAXSLee_normalize');
uimenu(hMenuTools,...
    'Label','&XAxis Normalize...',...
    'HandleVisibility','callback',...
    'Callback','SAXSLee_Xnormalize');

% --------------------------------
% --- Analysis menu handles
% --------------------------------
hMenuAnalysis = uimenu(hFigSAXSLee,...
    'Label','&Analysis',...
    'Position',3,...
    'HandleVisibility','callback',...
    'Tag','SAXSLee_MenuAnalysis');
hMenuAnalysisSimpleTools = uimenu(hMenuAnalysis,...
    'Label','Integral/Asymptotic Analysis ...',...
    'HandleVisibility','callback',...
    'Tag', 'SAXSLee_SimpleAnalysisTools'); %    'Callback','SAXSLee_analysis');
uimenu(hMenuAnalysisSimpleTools,...
    'Label','Multi data processing I ...',...
    'HandleVisibility','callback',...
    'Callback', @SAXSLee_simpleprocesstool1_callback);
uimenu(hMenuAnalysisSimpleTools,...
    'Label','&Guinier and Porod analysis ...',...
    'HandleVisibility','callback',...
    'Callback',@SAXSLee_GPanalysis_callback);
uimenu(hMenuAnalysisSimpleTools,...
    'Label','&Various Plot Analyses ...',...
    'HandleVisibility','callback',...
    'Callback',@SAXSLee_plotanalysis);
% Model Free
hMenuAnalysis_ModelFreeAnalysis = uimenu(hMenuAnalysis,...
    'Label','Model Free Analysis...',...
    'HandleVisibility','callback');
uimenu(hMenuAnalysis_ModelFreeAnalysis,...
    'Label','Maximum Entropy Polydisperse Sphere...',...
    'HandleVisibility','callback',...
    'Callback','fitsaxslee');
uimenu(hMenuAnalysis_ModelFreeAnalysis,...
    'Label','P(r) for a single phase object...',...
    'HandleVisibility','callback',...
    'Callback',@maxEntPr);
uimenu(hMenuAnalysis_ModelFreeAnalysis,...
    'Label','1D Electron Density Profile...',...
    'HandleVisibility','callback',...
    'Callback','SAXSLee_extract_edensity_profile');
% Particle Model
if exist('FitLee', 'file') == 2
    hMenuAnalysis_ParticlemodelFit = uimenu(hMenuAnalysis,...
        'Label','Particle Model Fit...',...
        'HandleVisibility','callback');
    uimenu(hMenuAnalysis_ParticlemodelFit,...
        'Label','Polydisperse Sphere...',...
        'HandleVisibility','callback',...
        'Callback','FitLee(''FitLee_schultzsphere'')');
    uimenu(hMenuAnalysis_ParticlemodelFit,...
        'Label','Polydisperse Sphere in absolute scale...',...
        'HandleVisibility','callback',...
        'Callback','FitLee(''FitLee_schultzsphere2'')');
    uimenu(hMenuAnalysis_ParticlemodelFit,...
        'Label','Polydisperse core-corona...',...
        'HandleVisibility','callback',...
        'Callback','FitLee(''FitLee_core_fuzzycorona_sphere'')');
    uimenu(hMenuAnalysis_ParticlemodelFit,...
        'Label','Polydisperse core-shell-shell...',...
        'HandleVisibility','callback',...
        'Callback','FitLee(''FitLee_coreshell_schultzsphere'')');
    uimenu(hMenuAnalysis_ParticlemodelFit,...
        'Label','Polydisperse core-shell-shell-polymer...',...
        'HandleVisibility','callback',...
        'Callback','FitLee(''FitLee_coreshellshell_polymer'')');
    uimenu(hMenuAnalysis_ParticlemodelFit,...
        'Label','Cluster of polydisperse sphere...',...
        'HandleVisibility','callback',...
        'Callback','FitLee(''FitLee_schultzsphere3'')');
    uimenu(hMenuAnalysis_ParticlemodelFit,...
        'Label','Cluster of Guinier-Porod particle...',...
        'HandleVisibility','callback',...
        'Callback','FitLee(''FitLee_FractalAggregateofFractalPP'')');
    uimenu(hMenuAnalysis_ParticlemodelFit,...
        'Label','Cluster of polydisperse fractal particle...',...
        'HandleVisibility','callback',...
        'Callback','FitLee(''FitLee_poly_fractalparticle'')');
    uimenu(hMenuAnalysis_ParticlemodelFit,...
        'Label','Cluster of coreshell fuzzy sphere...',...
        'HandleVisibility','callback',...
        'Callback','FitLee(''FitLee_cluster_coreshellfuzzysphere'')');
    uimenu(hMenuAnalysis_ParticlemodelFit,...
        'Label','Polydisperse Polyhedra...',...
        'HandleVisibility','callback',...
        'Callback','FitLee(''FitLee_polyhedra'')');
    uimenu(hMenuAnalysis_ParticlemodelFit,...
        'Label','2 level Unified SAXS...',...
        'HandleVisibility','callback',...
        'Callback','FitLee(''FitLee_unifiedSAXS'')');
    uimenu(hMenuAnalysis_ParticlemodelFit,...
        'Label','BilayerVesicle...',...
        'HandleVisibility','callback',...
        'Callback','FitLee(''FitLee_BilayeredVesicale'')');
end
% BCP lamella
hMenuAnalysis_BCPparacrystal = uimenu(hMenuAnalysis,...
    'Label','BCP Lamella...',...
    'HandleVisibility','callback');
uimenu(hMenuAnalysis_BCPparacrystal,...
    'Label','1D Lamella analysis...',...
    'HandleVisibility','callback',...
    'Callback','FitLee(''FitLee_lamellaparacrystal'')');
uimenu(hMenuAnalysis_BCPparacrystal,...
    'Label','ABC Triblock copolymer lamella analysis...',...
    'HandleVisibility','callback',...
    'Callback','FitLee(''FitLee_trilamellaparacrystal'')');
uimenu(hMenuAnalysis_BCPparacrystal,...
    'Label','MultiLayer Lamella Analysis...',...
    'HandleVisibility','callback',...
    'Callback','FitLee(''FitLee_lamella'')');
% Polymer Single Chains
hMenuAnalysis_PolymerSingleChains = uimenu(hMenuAnalysis,...
    'Label','Homo/Blend Single Chains...',...
    'HandleVisibility','callback');
uimenu(hMenuAnalysis_PolymerSingleChains,...
    'Label','OZ and DB...',...
    'HandleVisibility','callback',...
    'Callback','FitLee(''OZDB'')');
uimenu(hMenuAnalysis_PolymerSingleChains,...
    'Label','RPA analysis...',...
    'HandleVisibility','callback',...
    'Callback','FitLee(''FitLee_RPA'')');
% Diffraction
hMenuAnalysis_diffraction = uimenu(hMenuAnalysis,...
    'Label','Diffraction Tools...',...
    'HandleVisibility','callback');
if exist('FitLee', 'file') == 2
    uimenu(hMenuAnalysis_diffraction,...
        'Label','Peakfit with pseudovoigt functions...',...
        'HandleVisibility','callback',...
        'Callback','FitLee(''FitLee_multipseudovoigt'')');
end
uimenu(hMenuAnalysis_diffraction,...
    'Label','Peak Finder...',...
    'HandleVisibility','callback',...
    'Callback',@SAXSLee_peakfinder);
if exist('indexing', 'file') == 2
    uimenu(hMenuAnalysis_diffraction,...
        'Label','Indexing...',...
        'HandleVisibility','callback',...
        'Callback',@indexing);
end
% --------------------------------
% --- help menu handles
% --------------------------------
hMenuHelp = uimenu(hFigSAXSLee,...
    'Label','&Help',...
    'Position',4,...
    'HandleVisibility','callback',...
    'Tag','SAXSLee_MenuHelp');    
uimenu(hMenuHelp,...
    'Label','&Plot & Background Subtraction Help',...
    'HandleVisibility','callback',...
    'Callback',@SAXSLee_Help);
uimenu(hMenuHelp,...
    'Label','&About Plot & Background Subtraction',...
    'HandleVisibility','callback',...
    'Separator','on',...
    'Callback',@SAXSLee_AboutSAXSLee);
    
% --------------------------------
% --- toolbar handles
% --------------------------------
% Load icons
% try
%     icon_background = imread('background.png');
% catch
%     mn = fullfile(matlabroot,'toolbox','mytool','1DSAXS', 'GUI', 'background.png');
%     icon_background = imread(mn);
% end
% t = icon_background == 0;icon_background=double(icon_background)/255;
% icon_background(t)= NaN;

try
    icon_minus = imread('minus.png');
catch
    mn = fullfile(matlabroot,'toolbox','mytool','1DSAXS', 'GUI', 'minus.png');
    icon_minus = imread(mn);
end
t = icon_minus == 0;icon_minus=double(icon_minus)/255;
icon_minus(t)= NaN;

try
    icon_noentry = imread('noentry-circlesign.png');
catch
    mn = fullfile(matlabroot,'toolbox','mytool','1DSAXS', 'GUI', 'noentry-circlesign.png');
    icon_noentry = imread(mn);
end
t = icon_noentry == 0;icon_noentry=double(icon_noentry)/255;
icon_noentry(t)= NaN;

try
    icon_tick = imread('eraser.png');
catch
    mn = fullfile(matlabroot,'toolbox','mytool','1DSAXS', 'GUI', 'eraser.png');
    icon_tick = imread(mn);
end
t = icon_tick == 0;icon_tick=double(icon_tick)/255;
icon_tick(t)= NaN;


try
    icon_toolhand = imread('tool_hand.png');
catch
    mn = fullfile(matlabroot, 'toolbox', 'matlab', 'icons', 'tool_hand.png');
    icon_toolhand = imread(mn);
end
t = icon_toolhand == 0;icon_toolhand=double(icon_toolhand)/2^16;
icon_toolhand(t)= NaN;

try
    icon_circlecursor = imread('circlecursor.png');
catch
    mn = fullfile(matlabroot, 'toolbox', 'matlab', 'icons', 'circlecursor.png');
    icon_circlecursor = imread(mn);
end
t = icon_circlecursor == 0;icon_circlecursor=double(icon_circlecursor)/2^16;
icon_circlecursor(t)= NaN;

try
    icon_grid = imread('grid.png');
catch
    mn = fullfile(matlabroot, 'toolbox', 'matlab', 'icons', 'grid.png');
    icon_grid = imread(mn);
end
t = icon_grid == 255;
icon_grid=double(icon_grid)/255;
icon_grid(t)= NaN;

try
    icon_divide = imread('divide.png');
catch
    mn = fullfile(matlabroot, 'toolbox', 'matlab', 'icons', 'divide.png');
    icon_divide = imread(mn);
end
t = icon_divide == 0;
icon_divide=double(icon_divide)/255;
icon_divide(t)= NaN;

try
    icon_summation = imread('summation.png');
catch
    mn = fullfile(matlabroot, 'toolbox', 'matlab', 'icons', 'summation.png');
    icon_summation = imread(mn);
end
t = icon_summation == 0;
icon_summation=double(icon_summation)/255;
icon_summation(t)= NaN;

try
    icon_FF = imread('FF.png');
catch
    mn = fullfile(matlabroot, 'toolbox', 'matlab', 'icons', 'FF.png');
    icon_FF = imread(mn);
end
t = icon_FF == 0;
icon_FF=double(icon_FF)/255;
icon_FF(t)= NaN;

try
    icon_Bg = imread('Bg2.png');
catch
    mn = fullfile(matlabroot, 'toolbox', 'matlab', 'icons', 'Bg2.png');
    icon_Bg = imread(mn);
end
t = icon_Bg == 0;
icon_Bg=double(icon_Bg)/255;
icon_Bg(t)= NaN;

hToolbar = uitoolbar(hFigSAXSLee,...
    'Tag','SAXSLee_Toolbar');
uipushtool(hToolbar,...
    load(fullfile(matlabroot,'toolbox','matlab','icons','opendoc.mat')),...
    'TooltipString','Open Spec File',...
    'ClickedCallback',@SAXSLee_openspec,...
    'Tag','toolbarOpen');
uipushtool(hToolbar,...
    load(fullfile(matlabroot,'toolbox','matlab','icons','savedoc.mat')),...
    'TooltipString','Save Data',...
    'ClickedCallback','curvesave',...
    'Tag','toolbarSave');
uipushtool(hToolbar,...
    load(fullfile(matlabroot,'toolbox','matlab','icons','printdoc.mat')),...
    'TooltipString','Print Figure',...
    'ClickedCallback',@SAXSLee_PrintFcn,...
    'Tag','toolbarPrint');
uitoggletool(hToolbar,...
    load(fullfile(matlabroot,'toolbox','matlab','icons','pointer.mat')),...
    'TooltipString','Edit Plot',...
    'ClickedCallback',@toolbarEditPlotFcn,...
    'Separator','on',...
    'Tag','toolbarEditPlot');
iconToolbarZoom = load(...
    fullfile(matlabroot,'toolbox','matlab','icons','zoom.mat'));
uitoggletool(hToolbar,...
    'CDATA',iconToolbarZoom.zoomCData,...
    'TooltipString','Zoom',...
    'Separator','on',...
    'State','off',...
    'ClickedCallback',@toolbarZoomFcn,...
    'Tag','toolbarZoom');
uitoggletool(hToolbar,...
    load(fullfile(matlabroot,'toolbox','matlab','icons','pan.mat')),...
    'TooltipString','Pan',...
    'ClickedCallback',@toolbarPanFcn,...
    'Tag','toolbarPan');
uitoggletool(hToolbar, ...
    load(fullfile(matlabroot,'toolbox','matlab','icons','datatip.mat')),...
    'TooltipString','Data Cursor',...
    'ClickedCallback',@toolbarDataCursorFcn,...
    'Separator','on',...
    'Tag','toolbarDataCursor');
uitoggletool(hToolbar, ...
    load(fullfile(matlabroot,'toolbox','matlab','icons','legend.mat')),...
    'TooltipString','Legend On/Off',...
    'ClickedCallback',@toolbarLegendFcn,...
    'Separator','on',...
    'Tag','toolbarLegend');
uitoggletool(hToolbar,...
    'CData',icon_grid,...
    'TooltipString','Grid On/Off',...
    'ClickedCallback','grid',...
    'State','on',...
    'Tag','toolbarGrid');
iconPlottoolsOff = load(...
    fullfile(matlabroot,'toolbox','matlab','icons','plottoolsoff.mat'));
uipushtool(hToolbar,...
    'CData',iconPlottoolsOff.cdata,...
    'TooltipString','Hide Plot Tools',...
    'ClickedCallback',@toolbarPlottoolsOffFcn,...
    'Separator','on',...
    'Enable','off',...
    'Tag','toolbarPlottoolsOff');
iconPlottoolsOn = load(...
    fullfile(matlabroot,'toolbox','matlab','icons','plottoolson.mat'));
uitoggletool(hToolbar,...
    'CData',iconPlottoolsOn.cdata,...
    'TooltipString','Hold on',...
    'ClickedCallback',@toolbarHoldOnFcn,...
    'Enable','on',...
    'Tag','toolbarPlottoolsOn');
uipushtool(hToolbar,...
    'CData',icon_tick,...%icons.iconinvertx,...
    'Separator','on',...    
    'TooltipString','Clear data',...
    'ClickedCallback',@clearaxis,...
    'Tag','toolbarInvert');
uipushtool(hToolbar,...
    'CData',icon_summation, ...%icons.iconmerge,...
    'TooltipString','Compute an averaged curve',...
    'ClickedCallback','SAXSLee_scanmerge_old',...
    'Tag','toolbarMerge2');
uitoggletool(hToolbar,...
    'CData',icon_Bg,...
    'Separator','on',...  
    'TooltipString','Show background scan',...
    'ClickedCallback',@refscanplot,...
    'Tag','toolbarRefScan');
uitoggletool(hToolbar,...
    'CData',icon_minus,...
    'TooltipString','Auto Background Subtraction',...
    'ClickedCallback','autobacksub',...
    'Tag','toolbarAutobacksub');
uitoggletool(hToolbar,...
    'CData',icon_FF,...
    'Separator','on',...  
    'TooltipString','Show Form Factor',...
    'ClickedCallback',@showFF,...
    'Tag','toolbarshowFF');
uitoggletool(hToolbar,...
    'CData',icon_divide,...
    'TooltipString','Form Factor Divide out',...
    'ClickedCallback','autoFFdivide',...
    'Tag','toolbarAutoFFdivide');
uipushtool(hToolbar,...
    'CData',icon_noentry,...%icons.iconfootprint,...
    'Separator','on',...  
    'TooltipString','Reset reference scans',...
    'ClickedCallback','resetrefscan',...
    'Tag','toolbarFootprint');
uitoggletool(hToolbar,...
    'CData',icon_circlecursor,...%icons.iconrocking,...
    'TooltipString','Select region of interest',...
    'OnCallback','SAXSLee_datalabel',...
    'OffCallback','SAXSLee_datalabel off',...
    'Tag','toolbarDataLabel');
uitoggletool(hToolbar,...
    load(fullfile(matlabroot,'toolbox','matlab','icons','datatip.mat')),...
    'TooltipString','Read Value',...
    'ClickedCallback',@gtrack_start,...
    'Separator','on',...
    'Tag','Readvalue');
uitoggletool(hToolbar,...
    'Cdata', icon_toolhand-0.001, ...
    'TooltipString','Interactive data move',...
    'ClickedCallback',@interactive_curve,...
    'Separator','on',...
    'Tag','InteractiveMove');

% --------------------------------
% --- pushbotton handles
% --------------------------------
hPushbuttonSelectScan = uicontrol(hFigSAXSLee,...
    'Style','pushbutton',...
    'String','Select Data to Plot',...
    'TooltipString',' Select Scan',...
    'Tag','SAXSLee_PushbuttonSelectScan',...
    'callback',@SAXSLee_selectscan);
hPushbuttonSelectScanFilter = uicontrol(hFigSAXSLee,...
    'Style','edit',...
    'String','',...
    'TooltipString','Put filter words separated by a space',...
    'Tag','SAXSLee_PushbuttonSelectScanFilter');

% --------------------------------
% --- popupmenu handles
% --------------------------------
hPopupmenuX = uicontrol(hFigSAXSLee,...
    'Style','popupmenu',...
    'Background','w',...
    'String',' ',...
    'TooltipString',' Select Spec file',...
    'Tag','SAXSLee_PopupmenuX',...
    'callback',@SAXSLee_switchspecfile);
hPopupmenuI0 = uicontrol(hFigSAXSLee,...
    'Style','edit',...
    'Background','w',...
    'String','1',...
    'TooltipString',' transmittance for background',...
    'Tag','SAXSLee_PopupmenuI0',...
    'callback',@transmittance_callback);
hPopupmenuPlotStyle = uicontrol(hFigSAXSLee,...
    'Style','popupmenu',...
    'Background','w',...
    'String',{'linear','logx','logy','logxy'},...
    'TooltipString',' Plot Style',...
    'Tag','SAXSLee_PopupmenuPlotStyle',...
    'callback',@plotstyle);

handles.hPushbuttonSelectScan = hPushbuttonSelectScan; 
handles.hPushbuttonSelectScanFilter = hPushbuttonSelectScanFilter;
%handles.hPushbuttonRefresh = hPushbuttonRefresh;
handles.hPopupmenuX = hPopupmenuX;
%handles.hPopupmenuY = hPopupmenuY;
handles.hPopupmenuI0 = hPopupmenuI0;
handles.hPopupmenuPlotStyle = hPopupmenuPlotStyle;
handles.hAxes = hAxes;

positionObj(hFigWidth, hFigHeight, handles)

function positionObj(hFigWidth, hFigHeight, handles)
hPushbuttonSelectScan = handles.hPushbuttonSelectScan;
hPushbuttonSelectScanFilter = handles.hPushbuttonSelectScanFilter;
hPopupmenuX = handles.hPopupmenuX;
hPopupmenuI0 = handles.hPopupmenuI0;
hPopupmenuPlotStyle = handles.hPopupmenuPlotStyle;
hAxes = handles.hAxes;

PosFigureTopCenter = [(hFigWidth)/2,hFigHeight-35];
PosFigureTopCenter(1) = PosFigureTopCenter(1) - 30;
set(hPushbuttonSelectScan,...
    'Units','Pixels',...
    'Position',[PosFigureTopCenter(1)-260,PosFigureTopCenter(2),120,25]);
set(hPushbuttonSelectScanFilter,...
    'Units','Pixels',...
    'Position',[PosFigureTopCenter(1)-140,PosFigureTopCenter(2),60,25]);
set(hPopupmenuX,...
    'Units','Pixels',...
    'Position',[PosFigureTopCenter(1)-70,PosFigureTopCenter(2),120,25]);
set(hPopupmenuI0,...
    'Units','Pixels',...
    'Position',[PosFigureTopCenter(1)+60,PosFigureTopCenter(2)+5,80,20]);
set(hPopupmenuPlotStyle,...
    'Units','Pixels',...
    'Position',[PosFigureTopCenter(1)+150,PosFigureTopCenter(2),80,25]);
set(hAxes,...
    'Units','Pixels',...
    'Position',[65,80,hFigWidth-130,hFigHeight-160]);


%================================================================
% --- things to do when starting SAXSLee:
% 1. initalize the settings; save to application data 'settings'
%================================================================
function SAXSLee_CreateFcn(varargin)
hObject = varargin{1};
hFigSAXSLee = hObject;
settings.wavelength = 1.024755735383;
settings.footprintAngle     = 0.5;              % incident side footprint angle
settings.footprintAngleSC   = 0.5;              % detector side footprint angle
settings.georockingSCFlag   = 0;                % 0) no detector side correction 1) yes
settings.qz4Rocking         = 0.15;             % default qz for rocking scan
settings.merge.mode  = 2;        % 1) intensity based 2) # of points based (default) 
settings.merge.interpMethod = 1; % 1) spline (default) 2) linear 3) nearest 4) cubic
settings.monitorPeriod   = 0.5;  % scan monitor period (sec)
settings.average.mode = 2;       % 1) goldaverage (default) 2) SAXSimageviewer
settings.automethod = 1;       % 1) specfile (default) 2) directory comparison
settings.file       = '';
settings.scan       = '';
settings.back       = '';
settings.rootDir    = '';
settings.path       = '';
settings.averageDir       = 'Averaged';
settings.averageCmd       = './goldnormengavg';
settings.backsubtractedDir       = 'Processed';
settings.imageListString = '*.tif';
settings.savepath   = '';
setappdata(hFigSAXSLee,'settings',settings);
setappdata(hFigSAXSLee,'refscan',[]);
%assignin('base', 'SAXSLee', hFigSAXSLee);
fprintf(' Use the following command to access settings\n')
fprintf('       getappdata(SAXSLee, "setting")\n')

%================================================================
% --- SAXSLee figure close request function
%================================================================
function SAXSLee_CloseRequestFcn(varargin)
hFigSAXSLee = findobj('Tag','SAXSLee_Fig');
h = findobj(hFigSAXSLee, 'type','uicontextmenu');
delete(h);

hSAXSLeetimerMonitor   = timerfindall('Tag','SAXSLeetimerMonitor');
delete(hSAXSLeetimerMonitor);
try
    evalin('caller',['clear ','SAXSLee_Handle']);
    evalin('caller',['clear ','setall']);
    evalin('caller',['clear ','settings']);
catch
    disp('No SAXSLee_Handle is found in any workspace')
end
delete(hFigSAXSLee);


%================================================================
% --- SAXSLee figure resize function
%================================================================
function SAXSLee_ResizeFcn(varargin)
hFigSAXSLee = findobj('Tag','SAXSLee_Fig');
hAxes = findobj(hFigSAXSLee,'Tag','SAXSLee_Axes');
hPushbuttonSelectScan = findobj(hFigSAXSLee,'Tag','SAXSLee_PushbuttonSelectScan');
hPushbuttonSelectScanFilter = findobj(hFigSAXSLee,'Tag','SAXSLee_PushbuttonSelectScanFilter');
%hPushbuttonRefresh = findobj(hFigSAXSLee,'Tag','SAXSLee_PushbuttonRefresh');
hPopupmenuX = findobj(hFigSAXSLee,'Tag','SAXSLee_PopupmenuX');
%hPopupmenuY = findobj(hFigSAXSLee,'Tag','SAXSLee_PopupmenuY');
hPopupmenuI0 = findobj(hFigSAXSLee,'Tag','SAXSLee_PopupmenuI0');

hPopupmenuPlotStyle = findobj(hFigSAXSLee,'Tag','SAXSLee_PopupmenuPlotStyle');
figureSize = get(hFigSAXSLee,'Position');
if isempty(figureSize)
    return
end

try         % in case figure size is too samll that width and height < 0
    handles.hPushbuttonSelectScan = hPushbuttonSelectScan; 
    handles.hPushbuttonSelectScanFilter = hPushbuttonSelectScanFilter; 
    %handles.hPushbuttonRefresh = hPushbuttonRefresh;
    handles.hPopupmenuX = hPopupmenuX;
%    handles.hPopupmenuY = hPopupmenuY;
    handles.hPopupmenuI0 = hPopupmenuI0;
    handles.hPopupmenuPlotStyle = hPopupmenuPlotStyle;
    handles.hAxes = hAxes;
    positionObj(figureSize(3), figureSize(4), handles)
catch
end

%================================================================
% --- print preview callback function
%================================================================
function SAXSLee_PrintPreviewFcn(varargin)
hFigSAXSLee = findobj('Tag','SAXSLee_Fig');


%================================================================
% --- print callback function
%================================================================
function SAXSLee_PrintFcn(varargin)
hFigSAXSLee = findobj('Tag','SAXSLee_Fig');
hHide = [findobj(hFigSAXSLee,'Style','pushbutton');...
         findobj(hFigSAXSLee,'Style','popupmenu')];
set(hHide,'Visible','off');
printdlg;
set(hHide,'Visible','on');


%================================================================
% --- toolbar plottools off callback function
%================================================================
function toolbarPlottoolsOffFcn(varargin)
hFigSAXSLee = findobj('Tag','SAXSLee_Fig');
hToolbarPlottoolsOff = findobj(hFigSAXSLee,'Tag','toolbarPlottoolsOff');
hToolbarPlottoolsOn  = findobj(hFigSAXSLee,'Tag','toolbarPlottoolsOn');
% hToolbarEditPlot = findobj(hFigSAXSLee,'Tag','toolbarEditPlot');
hToolbarZoom = findobj(hFigSAXSLee,'Tag','toolbarZoom');
hToolbarPan = findobj(hFigSAXSLee,'Tag','toolbarPan');
hToolbarDataCursor = findobj(hFigSAXSLee,'Tag','toolbarDataCursor');
if strcmp(get(hToolbarPlottoolsOff,'Enable'),'off')
    return;
else
    zoom off;
    pan off;
    datacursormode off;
    set(hToolbarZoom,'State','off');
    set(hToolbarPan,'State','off');
    set(hToolbarDataCursor,'State','off');
    set(hToolbarPlottoolsOff,'Enable','off');
    set(hToolbarPlottoolsOn,'Enable','on');
    plottools off;
end


%================================================================
% --- toobar plottools on callback function
%================================================================
function toolbarHoldOnFcn(varargin)
hObject = varargin{1};
% hFigSAXSLee = findobj('Tag','SAXSLee_Fig');
hAxesSAXSLee = findobj('Tag','SAXSLee_Axes');

if strcmp(get(hToolbarPlottoolsOn,'Enable'),'off')
    return;
else
    if strcmp(get(hObject, 'State'), 'on')
        set(hAxesSAXSLee, 'Nextplot', 'add');
    else
        set(hAxesSAXSLee, 'Nextplot', 'replace');
    end
end

%================================================================
% --- toolbar edit plot callback
%================================================================
function toolbarEditPlotFcn(varargin)
hFigSAXSLee = findobj('Tag','SAXSLee_Fig');
% hToolbarEditPlot = findobj(hFigSAXSLee,'Tag','toolbarEditPlot');
hToolbarZoom = findobj(hFigSAXSLee,'Tag','toolbarZoom');
hToolbarPan = findobj(hFigSAXSLee,'Tag','toolbarPan');
hToolbarDataCursor = findobj(hFigSAXSLee,'Tag','toolbarDataCursor');
plotedit;
zoom off;
pan off;
datacursormode off;
set(hToolbarZoom,'state','off');
set(hToolbarPan,'state','off');
set(hToolbarDataCursor,'state','off');

%================================================================
% --- toolbar zoom callback
%================================================================
function toolbarZoomFcn(varargin)
hFigSAXSLee = findobj('Tag','SAXSLee_Fig');
hToolbarEditPlot = findobj(hFigSAXSLee,'Tag','toolbarEditPlot');
% hToolbarZoom = findobj(hFigSAXSLee,'Tag','toolbarZoom');
hToolbarPan = findobj(hFigSAXSLee,'Tag','toolbarPan');
hToolbarDataCursor = findobj(hFigSAXSLee,'Tag','toolbarDataCursor');
plotedit off;
zoom;
pan off;
datacursormode off;
set(hToolbarEditPlot,'state','off');
set(hToolbarPan,'state','off');
set(hToolbarDataCursor,'state','off');

%================================================================
% --- toolbar pan callback
%================================================================
function toolbarPanFcn(varargin)
hFigSAXSLee = findobj('Tag','SAXSLee_Fig');
hToolbarEditPlot = findobj(hFigSAXSLee,'Tag','toolbarEditPlot');
hToolbarZoom = findobj(hFigSAXSLee,'Tag','toolbarZoom');
% hToolbarPan = findobj(hFigSAXSLee,'Tag','toolbarPan');
hToolbarDataCursor = findobj(hFigSAXSLee,'Tag','toolbarDataCursor');
plotedit off;
zoom off;
pan;
datacursormode off;
set(hToolbarEditPlot,'state','off');
set(hToolbarZoom,'state','off');
set(hToolbarDataCursor,'state','off');


%================================================================
% --- toolbar datacuror callback
%================================================================
function toolbarDataCursorFcn(varargin)
hFigSAXSLee = findobj('Tag','SAXSLee_Fig');
hToolbarEditPlot = findobj(hFigSAXSLee,'Tag','toolbarEditPlot');
hToolbarZoom = findobj(hFigSAXSLee,'Tag','toolbarZoom');
hToolbarPan = findobj(hFigSAXSLee,'Tag','toolbarPan');
% hToolbarDataCursor = findobj(hFigSAXSLee,'Tag','toolbarDataCursor');
plotedit off;
zoom off;
pan off;
try
    datacursormode;
catch
end
set(hToolbarEditPlot,'state','off');
set(hToolbarZoom,'state','off');
set(hToolbarPan,'state','off');


%================================================================
% --- toolbar legend callback funcion
%================================================================
function toolbarLegendFcn(varargin)
hFigSAXSLee = findobj('Tag','SAXSLee_Fig');
curvelegend(hFigSAXSLee);


%================================================================
% --- menu SAXSLee help callback fcn
%================================================================
function SAXSLee_Help(varargin)
test = questdlg('What would you like to do?','Help','Go to Youtube','Cancel','Go to Youtube');
if strcmp(test,'Go to Youtube')
    dos(['start https://www.youtube.com/channel/UCIVnZD6PKyJU4UNXOPeTviQ']);
end


%================================================================
% --- menu aboutSAXSLee function callback
%================================================================
function SAXSLee_AboutSAXSLee(varargin)
text_string = {...
    'SAXSLee, since 2008';...
    ' ';...
    'Sector 12-ID-B';...
    'Advanced Photon Source';...
    'Argonne National Laboratory, Illinois';...
    'Copyright Byeongdu Lee';...
    'Email: blee@aps.anl.gov'};
[cdata,map] = imread('200px-ArgonneNationalLaboratory_logo.png'); 
msgbox(text_string,'SAXSLee','custom',cdata,map,'modal');



function gtrack_OnMouseMove(varargin)

% get mouse position
hFigSAXSLee = findobj('Tag','SAXSLee_Fig');
    hAxes = findobj(hFigSAXSLee,'Tag','SAXSLee_Axes');
    pos_hAxes = get(hAxes, 'position');
%     pos_Fig = get(hFigSAXSLee, 'position');
    pt = get(hAxes, 'CurrentPoint');
    xInd = (pt(1, 1));
    yInd = (pt(1, 2));
    xlim = get(hAxes, 'xlim');
    ylim = get(hAxes, 'ylim');
    if (xInd < min(xlim)) | (xInd > max(xlim))
        set(gcf,'Pointer','arrow');
        return
    end
    if (yInd < min(ylim)) | (yInd > max(ylim))
        set(gcf,'Pointer','arrow');
        return
    end
    set(gcf,'Pointer','crosshair');
    xp = 0.02;
    yp = 1;
    widthannotation = 300;%0.3;
    heightannotation = 10;%0.05;
    pR = '%3.5f'; % number of digit for position description.....
    posX = pos_hAxes(1) + xp*pos_hAxes(3);%posX = posX/pos_Fig(3);
    posY = pos_hAxes(2) + yp*pos_hAxes(4) - heightannotation;%posY = posY/pos_Fig(4);
    hAnn = getappdata(hFigSAXSLee, 'Annohandle');
    if isempty(hAnn)
        hAnn = annotation('textbox',[0.1 0.1 0.1 0.1]);
        setappdata(hFigSAXSLee, 'Annohandle', hAnn);
    end
    
    set(hAnn, 'Units', 'pixel', 'position', [posX posY widthannotation heightannotation], 'linestyle', 'none');

% update figure title
    try
        pos_valuestr = ['X = ' num2str(xInd,pR) ', Y = ' num2str(yInd,pR) ', d = ' num2str(2*pi/xInd, '%0.1f')];
% possibility of wrong format strings...
    catch
        gtrack_Off()
    	error('GTRACK: Error printing coordinates. Check that you used a valid format string.')
    end
    set(hAnn, 'string', pos_valuestr);
    


function gtrack_Off(varargin)

% restore default figure properties
hFigSAXSLee = findobj('Tag','SAXSLee_Fig');

try
    hAnn = getappdata(hFigSAXSLee, 'Annohandle');
    setappdata(hFigSAXSLee, 'Annohandle', [])
    delete(hAnn);
end
fncs = getappdata(hFigSAXSLee, 'fncs');

set(hFigSAXSLee, 'windowbuttonmotionfcn', fncs.currFcn);
%set(hFigSAXSLee, 'windowbuttondownfcn', fncs.currFcn2);
set(hFigSAXSLee,'Pointer','arrow');
%title(handles.currTitle);



function gtrack_start(varargin)
%src,evnt
    % get current figure event functions
    hFigSAXSLee = findobj('Tag','SAXSLee_Fig');
    if strcmp(get(gcbo, 'State'), 'off')
        gtrack_Off;
        return
    end
    currFcn = get(hFigSAXSLee, 'windowbuttonmotionfcn');
    %
    fncs.currFcn = currFcn;
    setappdata(hFigSAXSLee, 'fncs', fncs);
    set(gcf,'Pointer','crosshair');
    set(gcf, 'windowbuttonmotionfcn', @gtrack_OnMouseMove);        

function interactive_curve(varargin)
    if strcmp(get(gcbo, 'State'), 'off')
        interactive_move(0);
        return
    end
    interactive_move(1);
    
function clearaxis(varargin)

    hFigSAXSLee = findobj('Tag','SAXSLee_Fig');
    hAxes = findobj(hFigSAXSLee,'Tag','SAXSLee_Axes');
    cla(hAxes);
    h = findobj(hFigSAXSLee, 'type','uicontextmenu');
    delete(h);



function transmittance_callback(varargin)
    SAXSLee_transmittance_callback(varargin);

function print2pdf(varargin)
    [p, f] = uiputfile('*.pdf', 'Save As', 'SAXSLee.pdf');
    if f ~= 0
        fn = [f, p];
        export_fig(fn, '-transparent');
    end

function SAXSLee_reflist2_load(varargin)
    hSL = gcf;
    h_obj = SAXSLee_reflist2;
    positionNewWindow(hSL, h_obj)


function SAXSLee_simpleprocesstool1_callback(varargin)
hSL = gcf;
h_obj = SAXSLee_simpleprocesstool1;
positionNewWindow(hSL, h_obj)

function SAXSLee_GPanalysis_callback(varargin)
hSL = gcf;
h_obj = SAXSLee_analysis;
positionNewWindow(hSL, h_obj)

function PlotControlTool_callback(varargin)
hSL = gcf;
h_obj = plotControl;
positionNewWindow(hSL, h_obj)

function ToolsBackground_callback(varargin)
hSL = gcf;
h_obj = BackgroundTools;
positionNewWindow(hSL, h_obj)

function ToolsAbsoluteCal_callback(varargin)
hSL = gcf;
h_obj = SAXSLee_twocurvefit;
positionNewWindow(hSL, h_obj)

function ToolsShowScan_callback(varargin)
hSL = gcf;
h_obj = SAXSLee_showscanparameter;
positionNewWindow(hSL, h_obj);

function positionNewWindow(h_mother, h_child, location)
m_unit = get(h_mother, 'unit');
set(h_child, 'unit', m_unit);
p_mother = get(h_mother, 'position');
p_child = get(h_child, 'position');
if nargin < 3
    location = 'righttop';
end

switch location
    case 'righttop'
        p_child(1) = p_mother(1)+p_mother(3);
        p_child(2) = p_mother(2) + (p_mother(4)-p_child(4));
    case 'rightbottom'
        p_child(1) = p_mother(1)+p_mother(3);
        p_child(2) = p_mother(2);
    case 'lefttop'
        p_child(1) = p_mother(1)-p_child(3);
        p_child(2) = p_mother(2) + (p_mother(4)-p_child(4));
    case 'leftbottom'
        p_child(1) = p_mother(1)-p_child(3);
        p_child(2) = p_mother(2);
end
set(h_child, 'position', p_child);

function maxEntPr(varargin)

    hL = findobj(gca, 'type', 'line');
    xd = get(hL, 'xdata');xd = xd(:);
    yd = get(hL, 'ydata');yd = yd(:);

    xdm = inf;idx = 0;
    if iscell(xd) % if there is a multiple data.
        fprintf('Plot only one SAXS data.\n');
        for i=1:numel(xd)
            if xdm > max(xd{i}) % selecting only SAXS data
                xdm = max(xd{i});
                idx = i;
            end
        end
        xd = xd{i};
        yd = yd{i};
    end
            
    try
        MEPr_qmin = evalin('base', 'MEPr_qmin');
    catch
        MEPr_qmin = min(xd);
    end
   
    
    try
        MEPr_qmax = evalin('base', 'MEPr_qmax');
    catch
        MEPr_qmax = max(xd);
    end
    
    try
        MEPr_rmin = evalin('base', 'MEPr_rmin');
    catch
        MEPr_rmin = 0;
    end
%     
    try
        MEPr_rmax = evalin('base', 'MEPr_rmax');
    catch
        MEPr_rmax = 100;
    end
    
    try
        MEPr_NIteration = evalin('base', 'MEPr_NIteration');
    catch
        MEPr_NIteration = 500;
    end
    
    try
        MaxEntStabilityParam = evalin('base', 'MaxEntStabilityParam');
    catch
        MaxEntStabilityParam = 0.01;
    end
    
    
    prompt = {'qmin:','qmax:','rmin:','rmax:','Number of Iteration:','Resolution:'};
    dlg_title = 'Input';
    num_lines = 1;
    defaultans = {num2str(MEPr_qmin),...
        num2str(MEPr_qmax),...
        num2str(MEPr_rmin),...
        num2str(MEPr_rmax),...
        num2str(MEPr_NIteration),...
        num2str(MaxEntStabilityParam),...
        };
    answer = inputdlg(prompt,dlg_title,num_lines,defaultans);
    if isempty(answer)
        disp('Cancel is selected')
        return
    end
    qmin = str2double(answer{1});
    qmax = str2double(answer{2});
    rmin = str2double(answer{3});
    rmax = str2double(answer{4});
    Nite = str2double(answer{5});
    stbP = str2double(answer{6});
    assignin('base', 'MEPr_qmin', qmin);
    assignin('base', 'MEPr_qmax', qmax);
    assignin('base', 'MEPr_rmax', rmin);
    assignin('base', 'MEPr_rmax', rmax);
    assignin('base', 'MEPr_NIteration', Nite);
    assignin('base', 'MaxEntStabilityParam', stbP);
    
    
    [~, ind1] = min(abs(xd-qmin));
    [~, ind2] = min(abs(xd-qmax));
    r = rmin:1:rmax;
    r = r(:);
    [~, md, ox] = maxent_pr(xd(ind1:ind2), yd(ind1:ind2)/0.01, sqrt(abs(yd(ind1:ind2))+eps), r, Nite, stbP,[],[]);
    [filename, pathname] = uiputfile(...
        {'*.txt';'*.dat'},...
        'Save as');
    if isequal(filename,0) || isequal(pathname,0)
        disp('User selected Cancel')
        return
    else
        disp(['User selected ',filename])
    end
    fn = fullfile(pathname, ['Data_', filename]);
    Model = [r(:), md(:)];
    q = xd(ind1:ind2);
    Iq = yd(ind1:ind2)/0.01;
    Iq = [q(:), Iq(:), ox(:)];
    fid = fopen(fn, 'w');
    fwrite(fid, '% q Iq_measured Iq_fit');
    fprintf(fid, '\n');
    fclose(fid);
    dlmwrite(fn, Iq, '-append');
    fn = fullfile(pathname, ['Pr_', filename]);
    fid = fopen(fn, 'w');
    fwrite(fid, '% r volume_size_distribution');
    fprintf(fid, '\n');
    fclose(fid);
    
    dlmwrite(fn, Model, '-append');